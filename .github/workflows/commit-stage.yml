name: Tests 
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: catalog
  VERSION:  latest

jobs:
  build:
    runs-on:  ubuntu-22.04
    permissions:
      contents: read
      security-events:  write
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Unit and Integration Tests
        run:  |
          chmod +x mvnw
          ./mvnw clean package 


  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:  [ build ]
    runs-on:  ubuntu-22.04
    permissions:
      contents: read
      security-events:  write
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache:  maven

      - name:  Build Container Image
        run:  |
          chmod +x mvnw
          ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: Log Into Container Registry
        run:  echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Publish Container Image
        run: |
          IMAGE_ID=${{ env.REGISTRY }}/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker image tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker image push $IMAGE_ID:$VERSION  
